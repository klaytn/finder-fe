name: finder-deploy
on:
    workflow_dispatch:
        inputs:
            target:
                description: 'Target Phase'
                required: true
                default: 'stage'
                type: choice
                options:
                    - dev
                    - stage
                    - prod

concurrency:
    group: finder-deploy-${{ github.event.inputs.target }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: 'read'
            id-token: 'write'
        steps:
            - name: Checkout source code
              uses: actions/checkout@v2

            - name: Set NodeJS version
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  registry-url: https://npm.pkg.github.com/

            - name: Cache npm dependencies
              uses: actions/cache@v3
              env:
                  cache-name: npm-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install dependencies
              run: npm install

            - name: ENV setting
              if: ${{ inputs.target == 'prod' }}
              run: |
                  echo "GENERATE_SOURCEMAP=false" >> $GITHUB_ENV

            - name: Build
              env:
                  REACT_APP_GIT_HASH: ${{ github.sha }}
                  REACT_APP_SERVICE: finder
              run: npm run build:finder

            - name: Cache build result
              uses: actions/cache@v3
              env:
                  cache-name: cache-build-result
              with:
                  path: ./
                  key: build-${{ github.sha }}-${{ inputs.target }}-finder

    deploy:
        # runs-on: [self-hosted, linux]
        runs-on: ubuntu-latest
        needs: [build]
        strategy:
            matrix:
                network: [cypress, baobab]
        steps:
            - name: Set NodeJS version
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  registry-url: https://npm.pkg.github.com/

            - name: ENV setting for dev
              if: ${{ inputs.target == 'dev' }}
              run: |
                  echo "WORKLOAD_IDENTITY_PROVIDER=${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}" >> $GITHUB_ENV
                  echo "GCP_SERVICE_ACCOUNT=${{ secrets.GCP_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
                  echo "GCS_BUCKET=klaytn-dev-finder-public/web" >> $GITHUB_ENV

            - name: ENV setting for stage
              if: ${{ inputs.target == 'stage' }}
              run: |
                  echo "WORKLOAD_IDENTITY_PROVIDER=${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}" >> $GITHUB_ENV
                  echo "GCP_SERVICE_ACCOUNT=${{ secrets.GCP_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
                  echo "GCS_BUCKET=klaytn-prod-finder-public/web-stage" >> $GITHUB_ENV
            - name: ENV setting for prod
              if: ${{ inputs.target == 'prod' }}
              run: |
                  echo "WORKLOAD_IDENTITY_PROVIDER=${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}" >> $GITHUB_ENV
                  echo "GCP_SERVICE_ACCOUNT=${{ secrets.GCP_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
                  echo "GCS_BUCKET=klaytn-prod-finder-public/web" >> $GITHUB_ENV
            - name: Cache build result
              uses: actions/cache@v3
              env:
                  cache-name: cache-build-result
              with:
                  path: ./
                  key: build-${{ github.sha }}-${{ inputs.target }}-finder

            - name: Install build scripts dependencies
              run: npm install -g ts-node turbo

            - name: Create config file
              env:
                  REACT_APP_GIT_HASH: ${{ github.sha }}
                  REACT_APP_NETWORK: ${{ matrix.network }}
                  REACT_APP_TARGET: ${{ inputs.target }}
                  REACT_APP_ACCESS_KEY: ${{ secrets.FINDER_ACCESS_KEY }}
                  REACT_APP_SECRET_KEY: ${{ secrets.FINDER_SECRET_KEY }}
                  REACT_APP_GA_ID: ${{ secrets.REACT_APP_GA_ID }}
                  REACT_APP_RUM_APPLICAION_ID: ${{ secrets.REACT_APP_RUM_APPLICAION_ID }}
                  REACT_APP_RUM_CLIENT_TOKEN: ${{ secrets.REACT_APP_RUM_CLIENT_TOKEN }}
              run: ts-node ./scripts/createConfig.ts "./build"
              working-directory: ./apps/finder

            - name: auth
              uses: google-github-actions/auth@v1
              with:
                  workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
                  service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
            - name: Upload to GCS
              uses: 'google-github-actions/upload-cloud-storage@v1'
              with:
                  path: './apps/finder/build'
                  destination: '${{ env.GCS_BUCKET }}/${{ matrix.network }}'
